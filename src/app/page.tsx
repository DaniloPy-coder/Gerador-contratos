"use client";

import { useState, useRef, useEffect } from "react";

interface FormData {
  contratante: string;
  cpfContratante: string;
  contratado: string;
  cpfContratado: string;
  local: string;
  servico: string;
  valor: string;
  dataInicio: string;
  dataFim: string;
}

export default function Page() {
  const contractRef = useRef<HTMLDivElement>(null);
  const [loading, setLoading] = useState(false);
  const [showContrato, setShowContrato] = useState(false);

  const [form, setForm] = useState<FormData>({
    contratante: "",
    cpfContratante: "",
    contratado: "",
    cpfContratado: "",
    local: "",
    servico: "",
    valor: "",
    dataInicio: "",
    dataFim: "",
  });

  // Carrega dados do localStorage
  useEffect(() => {
    const saved = localStorage.getItem("contratoForm");
    if (saved) setForm(JSON.parse(saved));
  }, []);

  // Salva no localStorage
  useEffect(() => {
    localStorage.setItem("contratoForm", JSON.stringify(form));
  }, [form]);

  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const name = e.target.name as keyof FormData;
    const value = e.target.value;

    setForm((prev) => ({
      ...prev,
      [name]: value,
    }));
  };

  const gerarContrato = () => {
    const hasEmptyFields = Object.values(form).some((val) => val.trim() === "");
    if (hasEmptyFields) {
      alert("Preencha todos os campos antes de gerar o contrato.");
      return;
    }

    setShowContrato(true);
  };

  const exportPDF = async () => {
    const hasEmptyFields = Object.values(form).some((val) => val.trim() === "");
    if (hasEmptyFields) {
      alert("Preencha todos os campos antes de baixar o PDF.");
      return;
    }

    setLoading(true);

    try {
      const res = await fetch("/api/generate-contract", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(form),
      });

      if (!res.ok) {
        alert("Erro ao gerar o PDF");
        return;
      }

      const blob = await res.blob();
      const url = URL.createObjectURL(blob);

      const a = document.createElement("a");
      a.href = url;
      a.download = "contrato.pdf";
      a.click();

      URL.revokeObjectURL(url);
    } catch (error) {
      console.error("Erro ao baixar o PDF:", error);
    } finally {
      setLoading(false);
    }
  };

  const dataHoje = new Date().toLocaleDateString("pt-BR");

  return (
    <div className="min-h-screen bg-gray-100 p-6">
      <div className="max-w-xl mx-auto bg-white p-6 rounded-xl shadow">
        <h1 className="text-3xl font-bold text-center mb-6 text-amber-600">
          üìÑ Gerador de Contratos
        </h1>

        <div className="space-y-4">
          {(Object.entries({
            contratante: "Nome do Contratante",
            cpfContratante: "CPF do Contratante",
            contratado: "Nome do Contratado",
            cpfContratado: "CPF do Contratado",
            servico: "Servi√ßo Prestado",
            local: "Cidade",
            valor: "Valor (R$)",
            dataInicio: "Data de In√≠cio",
            dataFim: "Data de T√©rmino",
          }) as [keyof FormData, string][]).map(([name, label]) => (
            <div key={name}>
              <label className="block text-sm font-medium text-gray-700 mb-1">
                {label}
              </label>
              {name === "servico" ? (
                <textarea
                  name={name}
                  value={form[name]}
                  onChange={handleChange}
                  rows={3}
                  className="w-full text-gray-700 border rounded px-3 py-2"
                />
              ) : (
                <input
                  type={name.includes("data") ? "date" : "text"}
                  name={name}
                  value={form[name]}
                  onChange={handleChange}
                  className="w-full text-gray-700 border rounded px-3 py-2"
                />
              )}
            </div>
          ))}

          <div className="flex gap-4 mt-4">
            <button
              onClick={gerarContrato}
              className="flex-1 bg-gray-500 text-white py-2 rounded hover:bg-gray-600"
            >
              Visualizar Contrato
            </button>

            <button
              onClick={exportPDF}
              className="flex-1 bg-green-600 text-white py-2 rounded hover:bg-green-700"
              disabled={loading}
            >
              {loading ? "Gerando..." : "Baixar PDF"}
            </button>
          </div>
        </div>
      </div>

      {showContrato && (
        <div className="max-w-3xl mx-auto bg-white mt-8 p-6 rounded-xl shadow">
          <h2 className="text-xl font-semibold mb-4 text-gray-600">Contrato Gerado</h2>

          <div ref={contractRef} id="print-area">
            <pre className="whitespace-pre-wrap text-sm font-mono text-gray-800">
              {`
CONTRATO DE PRESTA√á√ÉO DE SERVI√áOS

Pelo presente instrumento particular, de um lado ${form.contratante}, inscrito no CPF ${form.cpfContratante}, e de outro lado ${form.contratado}, inscrito no CPF ${form.cpfContratado}, t√™m entre si justo e contratado o seguinte:

Cl√°usula 1¬™ - Objeto  
O contratado prestar√° os servi√ßos de ${form.servico} com in√≠cio em ${form.dataInicio} e t√©rmino em ${form.dataFim}, conforme as condi√ß√µes aqui estipuladas.

Cl√°usula 2¬™ - Remunera√ß√£o  
O valor acordado para a presta√ß√£o dos servi√ßos √© de R$${form.valor}. O pagamento ser√° efetuado da seguinte forma: 50% no in√≠cio do servi√ßo e 50% na entrega final, salvo acordo diferente entre as partes por escrito.

Cl√°usula 3¬™ - Altera√ß√µes no Escopo  
Caso o contratante solicite modifica√ß√µes, amplia√ß√µes ou ajustes no servi√ßo que n√£o tenham sido previamente acordados neste contrato, o valor total ser√° revisto, podendo haver acr√©scimos conforme o novo escopo. Tais altera√ß√µes dever√£o ser registradas por escrito e aprovadas por ambas as partes.

Cl√°usula 4¬™ - Obriga√ß√µes do Contratado  
O contratado se compromete a executar os servi√ßos com zelo, dilig√™ncia e conforme as normas t√©cnicas aplic√°veis.

Cl√°usula 5¬™ - Obriga√ß√µes do Contratante  
O contratante dever√° fornecer todas as informa√ß√µes e documentos necess√°rios para a execu√ß√£o dos servi√ßos, bem como efetuar os pagamentos nos prazos acordados.

Cl√°usula 6¬™ - Prazo e Rescis√£o  
O contrato vigorar√° pelo prazo estipulado, podendo ser rescindido por qualquer das partes mediante aviso pr√©vio de 30 (trinta) dias, sem preju√≠zo do cumprimento das obriga√ß√µes pendentes.

Cl√°usula 7¬™ - Confidencialidade  
Ambas as partes se comprometem a manter em sigilo todas as informa√ß√µes confidenciais obtidas durante a vig√™ncia deste contrato.

Cl√°usula 8¬™ - Foro  
Para dirimir quaisquer controv√©rsias oriundas deste contrato, fica eleito o foro da comarca de ${form.local}, com ren√∫ncia a qualquer outro. E, por estarem assim justos e contratados, firmam o presente contrato em duas vias de igual teor.

Cl√°usula 9¬™ - Responsabilidade Civil  
O contratado ser√° respons√°vel por eventuais danos causados ao contratante decorrentes de dolo ou neglig√™ncia comprovada na execu√ß√£o dos servi√ßos.

Cl√°usula 10¬™ - Propriedade Intelectual  
Todos os materiais, produtos ou resultados gerados durante a presta√ß√£o dos servi√ßos ser√£o de propriedade do contratante, salvo acordo pr√©vio por escrito.

Cl√°usula 11¬™ - Subcontrata√ß√£o  
O contratado n√£o poder√° transferir ou subcontratar total ou parcialmente os servi√ßos objeto deste contrato sem autoriza√ß√£o pr√©via e por escrito do contratante.

Cl√°usula 12¬™ - Comunica√ß√£o entre as Partes  
Toda e qualquer comunica√ß√£o relacionada a este contrato dever√° ser feita por escrito e enviada aos endere√ßos de e-mail fornecidos pelas partes no momento da assinatura.

Cl√°usula 13¬™ - Caso Fortuito e For√ßa Maior  
As partes n√£o ser√£o responsabilizadas por eventuais falhas no cumprimento das obriga√ß√µes aqui pactuadas quando decorrentes de caso fortuito ou for√ßa maior, nos termos do artigo 393 do C√≥digo Civil.

Cl√°usula 14¬™ - Validade  
Se qualquer cl√°usula deste contrato for considerada inv√°lida ou inexequ√≠vel por um tribunal competente, as demais cl√°usulas permanecer√£o em pleno vigor e efeito.

${form.local}, ${dataHoje}

Assinatura CONTRATANTE: _______________________

Assinatura CONTRATADO: _______________________
              `}
            </pre>
          </div>

          <button
            onClick={() => window.print()}
            className="mt-4 bg-blue-600 text-white py-2 px-4 rounded hover:bg-blue-700"
          >
            Imprimir Contrato
          </button>
        </div>
      )}
    </div>
  );
}
